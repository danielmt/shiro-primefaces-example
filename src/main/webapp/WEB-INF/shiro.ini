[main]
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter

authc.loginUrl = /login.xhtml
authc.successUrl = /index.xhtml
roles.unauthorizedUrl = /unauthorized.xhtml

ssl.enabled = false

# Use default password matcher (SHA-256, 500000 hash iterations)
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher


# DataSource Setup
#datasource = org.apache.shiro.jndi.JndiObjectFactory
#datasource.resourceName = java:app/jdbc/shiro-primefaces
#datasource.resourceRef = true

# JDBC Realm
#jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
#jdbcRealm.authenticationQuery = SELECT password FROM person WHERE login = ?
#jdbcRealm.userRolesQuery = SELECT r.name FROM person p, role r, person_role pr WHERE pr.id_person = p.id and r.id = pr.id_role and p.login = ?
#jdbcRealm.permissionsLookupEnabled = false
#jdbcRealm.permissionsQuery = SELECT permission_name FROM ROLES_PERMISSIONS WHERE role_name = ?
#jdbcRealm.credentialsMatcher = $passwordMatcher
#jdbcRealm.dataSource = $datasource

#securityManager.realms = $jdbcRealm

staticRealm = org.apache.shiro.realm.text.IniRealm
staticRealm.resourcePath=/Users/hcadavid/temp/danielmt/shiro-primefaces-example/src/main/webapp/WEB-INF/shiro.ini

securityManager.realms = $staticRealm

[users]
root  = 12345,admin
guest = 12345,guest

[roles]
admin = *
guest = *

# Filter Setup
[urls]
/javax.faces.resource/** = anon
/login.xhtml = authc
/logout = logout
/admin/** = authc, roles[admin]
/** = authc, roles[user]